mutate(neighborhood = "fellspt") %>%
mutate(address = paste0(block, " ", street, ", ","Baltimore", ", ","Md")) %>%
mutate(rate1_day = as.numeric(first_rate_change_daytime_rate)) %>%
mutate(rate1_eve = as.numeric(first_rate_change_evening_rate)) %>%
mutate(rate2_day = as.numeric(second_rate_change_daytime_rate)) %>%
mutate(rate2_eve = as.numeric(second_rate_change_evening_rate))
#figure out why 800 S Broadway has $2.25 (Year 2022)
#need to geocode the streets
glimpse(fells)
View(fells)
fells <- fells %>%
# fedhill <- fedhill %>%
mutate(first_day_diff= (rate1_day - initial_rate)) %>%
mutate(first_eve_diff = (rate1_eve - initial_rate)) %>%
mutate(second_day_diff = (rate2_day - rate1_day)) %>%
mutate(second_eve_diff = (rate2_eve - rate1_eve)) %>%
mutate(change = case_when(first_day_diff < 0 ~ "decrease",
first_day_diff > 0 ~ "increase",
first_day_diff == 0 ~ "no_change",
first_eve_diff < 0 ~ "decrease",
first_eve_diff > 0 ~ "increase",
first_eve_diff == 0 ~ "no_change",
second_day_diff < 0 ~ "decrease",
second_day_diff > 0 ~ "increase",
second_day_diff == 0 ~ "no_change",
second_eve_diff < 0 ~ "decrease",
second_eve_diff > 0 ~ "increase",
second_eve_diff == 0 ~ "no_change"
)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE)),2) %>%
mutate(pct = round(count / sum(count)),2) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
View(changes_fells)
glimpse(fells)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE)),2) %>%
mutate(pct = round(count / sum(count)),2) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = (change), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE)),2) %>%
mutate(pct = round(count / sum(count)),2) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = (change), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE)),2)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE)),2)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE))
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count / sum(count)),2) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count / sum(count))) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = count / sum(count)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = count / summarize(sum(count))) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = count / summarise(sum(count))) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
glimpse(changes_fells)
sum(changes_fells$count)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = sum(count))
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = (count/sum(count))) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count))) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
View(changes_fells)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count),2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count)),2) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count),3)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = round(mean(first_eve_diff, na.rm = TRUE, digits =2))) %>%
mutate(pct = round(count/sum(count), digits =2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
View(changes_fells)
changes_fells <- fells %>%
select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits =2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2),
avg_first_eve_diff = round(avg_first_eve_diff, digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE))
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2),
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2),
avg_first_eve_diff = round(avg_first_eve_diff, digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(avg_first_eve_diff = round(avg_first_eve_diff, digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(avg_first_eve_diff1 = round(avg_first_eve_diff, digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff1) %>%
mutate(neighborhood = "fellspt")
changes_fells <- fells %>%
group_by(change) %>%
summarise(count = n(), avg_first_day_diff = mean(first_day_diff, na.rm = TRUE), avg_first_eve_diff1 = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(avg_first_eve_diff = round(avg_first_eve_diff1, digits = 2)) %>%
select(change, count, pct, avg_first_day_diff, avg_first_eve_diff) %>%
mutate(neighborhood = "fellspt")
cdowntown <- read_sheet("https://docs.google.com/spreadsheets/d/1FOL2vBfA4ifBbbjjjQEVDCHklcI_OWvd3vghDiBqDWE/edit#gid=1640964516", "Central Downtown") %>%
as.data.frame() %>%
clean_names() %>%
mutate(neighborhood = "cdowntown") %>%
mutate(address = paste0(block, " ", street, ", ","Baltimore", ", ","Md")) %>%
mutate(initial_sixth_rate1 = as.numeric(as.character(sixth_rate_change)))
View(cdowntown)
cdowntown <- read_sheet("https://docs.google.com/spreadsheets/d/1FOL2vBfA4ifBbbjjjQEVDCHklcI_OWvd3vghDiBqDWE/edit#gid=1640964516", "Central Downtown") %>%
as.data.frame() %>%
clean_names() %>%
mutate(neighborhood = "cdowntown") %>%
mutate(address = paste0(block, " ", street, ", ","Baltimore", ", ","Md")) %>%
mutate(initial_sixth_rate1 = as.numeric(as.character(sixth_rate_change)))
cdowntown <- cdowntown %>%
mutate(seventh_rate1 = as.numeric(as.character(seventh_rate_change))) %>%
mutate(eigth_rate1 = as.numeric(as.character(eighth_rate_change))) %>%
mutate(ninth_rate1 = as.numeric(as.character(ninth_rate_change))) %>%
mutate(tenth_rate1 = as.numeric(as.character(tenth_rate_change))) %>%
mutate(eleventh_rate1 = as.numeric(as.character(eleventh_rate_change)))
glimpse(cdowntown)
cdowntown <- cdowntown %>%
mutate(seventh_diff = (seventh_rate1 - initial_sixth_rate1)) %>%
mutate(eigth_diff = (eigth_rate1 - seventh_rate1)) %>%
mutate(ninth_diff = (ninth_rate1 - eigth_rate1)) %>%
mutate(tenth_diff = (tenth_rate1 - ninth_rate1)) %>%
mutate(eleventh_diff = (eleventh_rate1 - tenth_rate1)) %>%
mutate(total_diff = rowSums(select(., c("seventh_diff", "eigth_diff", "ninth_diff", "tenth_diff", "eleventh_diff")), na.rm = TRUE)) %>%
mutate(change = case_when(total_diff < 0 ~ "decrease",
total_diff > 0 ~ "increase",
total_diff == 0 ~ "no_change"))
changes_cdowntown <- cdowntown %>%
select(neighborhood, address, total_diff, change) %>%
group_by(change) %>%
summarise(count = n(), avg_total_diff = mean(total_diff, na.rm = TRUE)) %>%
mutate(pct = round(count / sum(count), 2)) %>%
select(change, count, pct, avg_total_diff) %>%
mutate(neighborhood = "cdowntown")
View(changes_cdowntown)
#rsw - I think I follow what you are saying. just verify it with the city
#Please see "Federal Hill" Column D on Google Sheet. They say $1.50/$2.00 but in "Fed Hill" I was able to logically assign the initial rate because if the rate adjustment one was recommended a decrease and the new price was $1.25, the initial had to have been $1.50.
fedhill <- read_sheet("https://docs.google.com/spreadsheets/d/1FOL2vBfA4ifBbbjjjQEVDCHklcI_OWvd3vghDiBqDWE/edit#gid=1640964516", "FedHill") %>%
as.data.frame() %>%
clean_names() %>%
mutate(neighborhood = "fedhill") %>%
mutate(address = paste0(block, " ", street, ", ","Baltimore", ", ","Md")) %>%
mutate(rate1_day = as.numeric(first_daytime_rate_change)) %>%
mutate(rate1_eve = as.numeric(first_evening_rate_change)) %>%
mutate(rate2_day = as.numeric(second_daytime_rate_change)) %>%
mutate(rate2_eve = as.numeric(second_evening_rate_change))
View(fedhill)
fedhill <- fedhill %>%
mutate(first_day_diff = (rate1_day - initial_rate)) %>%
mutate(first_eve_diff = (rate1_eve - initial_rate)) %>%
mutate(second_day_diff =(rate2_day - rate1_day)) %>%
mutate(second_eve_diff = (rate2_eve - rate1_eve)) %>%
mutate(total_diff = rowSums(select(., c("first_day_diff", "first_eve_diff", "second_day_diff", "second_eve_diff")), na.rm = TRUE,)) %>%
mutate(day_diff = rowSums(select(., c("first_day_diff","second_day_diff")), na.rm = TRUE,)) %>%
mutate(evening_diff = rowSums(select(., c("first_eve_diff", "second_eve_diff")), na.rm = TRUE,)) %>%
# mutate(change = case_when(first_day_diff < 0 ~ "decrease",
#                         first_day_diff > 0 ~ "increase",
#                         first_day_diff == 0 ~ "no_change",
#                         first_eve_diff < 0 ~ "decrease",
#                         first_eve_diff > 0 ~ "increase",
#                         first_eve_diff == 0 ~ "no_change",
#                         second_day_diff < 0 ~ "decrease",
#                         second_day_diff > 0 ~ "increase",
#                         second_day_diff == 0 ~ "no_change",
#                         second_eve_diff < 0 ~ "decrease",
#                         second_eve_diff > 0 ~ "increase",
#                         second_eve_diff == 0 ~ "no_change"))
mutate(change = case_when(day_diff < 0 ~ "decrease",
day_diff > 0 ~ "increase",
day_diff == 0 ~ "no_change",
evening_diff < 0 ~ "decrease",
evening_diff > 0 ~ "increase",
evening_diff == 0 ~ "no_change"))
fedhill <- fedhill %>%
mutate(first_day_diff = (rate1_day - initial_rate)) %>%
mutate(first_eve_diff = (rate1_eve - initial_rate)) %>%
mutate(second_day_diff =(rate2_day - rate1_day)) %>%
mutate(second_eve_diff = (rate2_eve - rate1_eve)) %>%
mutate(total_diff = rowSums(select(., c("first_day_diff", "first_eve_diff", "second_day_diff", "second_eve_diff")), na.rm = TRUE,)) %>%
mutate(day_diff = rowSums(select(., c("first_day_diff","second_day_diff")), na.rm = TRUE,)) %>%
mutate(evening_diff = rowSums(select(., c("first_eve_diff", "second_eve_diff")), na.rm = TRUE,)) %>%
# mutate(change = case_when(first_day_diff < 0 ~ "decrease",
#                         first_day_diff > 0 ~ "increase",
#                         first_day_diff == 0 ~ "no_change",
#                         first_eve_diff < 0 ~ "decrease",
#                         first_eve_diff > 0 ~ "increase",
#                         first_eve_diff == 0 ~ "no_change",
#                         second_day_diff < 0 ~ "decrease",
#                         second_day_diff > 0 ~ "increase",
#                         second_day_diff == 0 ~ "no_change",
#                         second_eve_diff < 0 ~ "decrease",
#                         second_eve_diff > 0 ~ "increase",
#                         second_eve_diff == 0 ~ "no_change"))
mutate(change = case_when(day_diff < 0 ~ "decrease",
day_diff > 0 ~ "increase",
day_diff == 0 ~ "no_change",
evening_diff < 0 ~ "decrease",
evening_diff > 0 ~ "increase",
evening_diff == 0 ~ "no_change"))
changes_fedhill <- fedhill %>%
# select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), day_diff_avg = mean(day_diff, na.rm = TRUE), evening_diff_avg = (mean(evening_diff, na.rm = TRUE)))
View(changes_fedhill)
changes_fedhill <- fedhill %>%
# select(neighborhood, address, first_day_diff, first_eve_diff, change) %>%
group_by(change) %>%
summarise(count = n(), day_diff_avg = mean(day_diff, na.rm = TRUE), evening_diff_avg = (mean(evening_diff, na.rm = TRUE))) %>%
mutate(pct = round(count / sum(count)),2)
changes_fedhill <- fedhill %>%
group_by(change) %>%
summarise(count = n(), day_diff_avg = mean(first_day_diff, na.rm = TRUE), evening_diff_avg1 = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(evening_diff_avg = round(evening_diff_avg1, digits = 2))
changes_fedhill <- fedhill %>%
group_by(change) %>%
summarise(count = n(), day_diff_avg1 = mean(first_day_diff, na.rm = TRUE), evening_diff_avg1 = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(evening_diff_avg = round(evening_diff_avg1, digits = 2)) %>%
mutate(day_diff_avg = round(day_diff_avg1, digits = 2)) %>%
mutate(neighborhood = "fedhill")
changes_fedhill <- fedhill %>%
group_by(change) %>%
summarise(count = n(), day_diff_avg1 = mean(first_day_diff, na.rm = TRUE), evening_diff_avg1 = mean(first_eve_diff, na.rm = TRUE)) %>%
mutate(pct = round(count/sum(count), digits = 2)) %>%
mutate(evening_diff_avg = round(evening_diff_avg1, digits = 2)) %>%
mutate(day_diff_avg = round(day_diff_avg1, digits = 2)) %>%
select(change, count, pct, day_diff_avg, evening_diff_avg) %>%
mutate(neighborhood = "fedhill")
#remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
#a = get_decennial(geography = "state", variables = "P1_001N", year = 2020)
# head(a, 5)
#install.packages("formattable")
library(formattable)
library(htmlwidgets)
library(leaflet)
library(sf)
library(formattable)
library(dplyr)
library(tidyr)
library(janitor)
#install.packages("leaflet.extras")
library(leaflet.extras)
library(googlesheets4)
census_api_key("9cabe8a191a1f824755d4a1845f13cb08faa2c5f", install = TRUE, overwrite = TRUE)
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5)))
#MD counties
md_counties <- rio::import("../data/md_counties_geoids.txt")
md_named <- md %>%
inner_join(md_counties, by=c("county"="GEOID")) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip))
md_named$income_per_capita <- formattable::currency(md_named$income_per_capita, digits =0L)
#write.csv(md_named, "../output/md_smith_data_1.28.csv")
#subset the geometry
#2020 Median Income By Census Tract ACS
#2016-2020
#B19001 COUNTS THE NUMBER OF HOUSEHOLDS
#B19013_001 is the household median income
md_income2020_geo <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
year = 2020, geometry = TRUE) %>%
mutate(year=("2020")) %>%
select(GEOID, NAME)
#B19013 defined: https://www.socialexplorer.com/data/ACS2010_5yr/metadata/?ds=ACS10_5yr&var=B19013001
md_named <- md_named %>%
mutate(GEOID = as.character(tract))
#join geocoordinates
md2 <- md_income2020_geo  %>%
right_join(md_named, by=c("GEOID")) %>%
distinct()
md2 <- md2 %>%
sf::st_transform('+proj=longlat +datum=WGS84')
View(md2)
places <- rio::import("
https://www2.census.gov/geo/docs/maps-data/data/rel2020/place/tab20_place20_place10_natl.txt")
places <- rio::import("https://www2.census.gov/geo/docs/maps-data/data/rel2020/place/tab20_place20_place10_natl.txt")
View(places)
View(md_counties)
md_places <- md %>%
inner_join(places, by=c("county"="GEOID_PLACE_10"))
View(md_places)
glimpse(places)
glimpse(md)
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
View(md)
glimpse(tract)
glimpse(md)
places <- rio::import("https://www2.census.gov/geo/docs/maps-data/data/rel2020/puma520/tab20_puma520_puma510_natl.txt")
glimpse(places)
View(places)
places <- rio::import("https://www2.census.gov/geo/docs/maps-data/data/gazetteer/2020_Gazetteer/2020_gaz_place_24.txt")
md_places <- md %>%
inner_join(places, by=c("county"="GEOID"))
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5)))
md_places <- md %>%
inner_join(places, by=c("county"="GEOID"))
View(md_places)
glimpse(md)
glimpse(places)
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5)))
mutate(geoid = as.numeric(strtrim(tract, 7)))
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5))) %>%
mutate(geoid = as.numeric(strtrim(tract, 7)))
md_places <- md %>%
inner_join(places, by=c("geoid"="GEOID"))
View(md_places)
glimpse(md)
glimpse(places)
places <- rio::import("https://www2.census.gov/geo/docs/maps-data/data/gazetteer/2020_Gazetteer/2020_gaz_place_24.txt") %>%
mutate(geod1 = as.character(GEOID))
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5))) %>%
mutate(geoid = as.numeric(strtrim(tract, 7))) %>%
mutate(geoid1 = as.character((geoid)))
md_places <- md %>%
inner_join(places, by=c("geoid1"))
places <- rio::import("https://www2.census.gov/geo/docs/maps-data/data/gazetteer/2020_Gazetteer/2020_gaz_place_24.txt") %>%
mutate(geoid1 = as.character(GEOID))
md_places <- md %>%
inner_join(places, by=c("geoid1"))
View(md_places)
View(md_income2020_geo)
maryland_places_data <- get_acs(geography = "place",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
year = 2020)
View(maryland_places_data)
# Retrieve ACS data for places in Maryland
places_data <- get_acs(geography = "place",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
year = 2020)
# Retrieve ACS data for tracts in Maryland
tracts_data <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
county = "*",
year = 2020,
geometry = TRUE)
tracts_data <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
county = "*",
year = 2020,
geometry = TRUE)
tracts_data <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
county = "*",
year = 2020,
geometry = TRUE)
# Ensure caching of shapefiles
options(tigris_use_cache = TRUE)
tracts_data <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
county = "*",
year = 2020,
geometry = TRUE)
options(tigris_use_cache = TRUE)
tracts_data <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
year = 2020,
geometry = TRUE)
View(places_data)
View(tracts_data)
View(places_data)
View(tracts_data)
View(places_data)
View(md2)
