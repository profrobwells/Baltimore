<div style="background-color: #fa8072; height: 20px; width: 30px; display: inline-block;"></div> 46-50%
<br>
<div style="background-color: #ffffbf; height: 20px; width: 30px; display: inline-block;"></div> 51-60%
</div>',
position = "bottomright"
) %>%
addControl(
html = "<div style='background-color: white; padding: 5px; border-radius: 3px;'><h3>Civil Membership & Income in Maryland</h3></div>",
position = "topright"
)
pal <- colorNumeric(
palette = "inferno",
domain = md2$pct_anymembershp_zip
)
#https://leaflet-extras.github.io/leaflet-providers/preview/
leafMap <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addPolygons(data = md2,
color = ~pal(md2$pct_anymembershp_zip),
weight = 2.5,
smoothFactor = 0.2,
fillOpacity = 0.5,
label = paste("Pct membership in civic groups is:",(md2$pct_anymembershp_zip), "<br>Income is",(md2$income_per_capita), "in", (md2$NAME.y), "zip code", (md2$zip))) %>%
addControl(
html = '<div id="legend" style="background-color: white; padding: 10px; border-radius: 5px; border: 1px solid #ccc; text-align: center;">
<p><strong>Pct Membership 2020</strong></p>
<div style="background-color: gray; height: 20px; width: 30px; display: inline-block;"></div> 0=NA
<br>
<div style="background-color: black; height: 20px; width: 30px; display: inline-block;"></div> 30-39%
<br>
<div style="background-color: #e75480; height: 20px; width: 30px; display: inline-block;"></div> 40-45%
<br>
<div style="background-color: #fa8072; height: 20px; width: 30px; display: inline-block;"></div> 46-50%
<br>
<div style="background-color: #ffffbf; height: 20px; width: 30px; display: inline-block;"></div> 51-60%
</div>',
position = "bottomright"
) %>%
addControl(
html = "<div style='background-color: white; padding: 5px; border-radius: 3px;'><h3>Civil Membership & Income in Maryland</h3></div>",
position = "topright"
)
#saveWidget(leafMap, "../output/state_member_all_map_jan_28.html")
leafMap
pal <- colorNumeric(
palette = "inferno",
domain = md2$pct_anymembershp_zip
)
#https://leaflet-extras.github.io/leaflet-providers/preview/
leafMap <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addPolygons(data = md2,
color = ~pal(md2$pct_anymembershp_zip),
weight = 2.5,
smoothFactor = 0.2,
fillOpacity = 0.5,
label = paste("Pct membership in civic groups is:",(md2$pct_anymembershp_zip), <br>"Income is",(md2$income_per_capita), "in", (md2$NAME.y), "zip code", (md2$zip))) %>%
pal <- colorNumeric(
palette = "inferno",
domain = md2$pct_anymembershp_zip
)
#https://leaflet-extras.github.io/leaflet-providers/preview/
leafMap <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addPolygons(data = md2,
color = ~pal(md2$pct_anymembershp_zip),
weight = 2.5,
smoothFactor = 0.2,
fillOpacity = 0.5,
label = paste("Pct membership in civic groups is:",(md2$pct_anymembershp_zip), "Income is",(md2$income_per_capita), "in", (md2$NAME.y), "zip code", (md2$zip))) %>%
addControl(
html = '<div id="legend" style="background-color: white; padding: 10px; border-radius: 5px; border: 1px solid #ccc; text-align: center;">
<p><strong>Pct Membership 2020</strong></p>
<div style="background-color: gray; height: 20px; width: 30px; display: inline-block;"></div> 0=NA
<br>
<div style="background-color: black; height: 20px; width: 30px; display: inline-block;"></div> 30-39%
<br>
<div style="background-color: #e75480; height: 20px; width: 30px; display: inline-block;"></div> 40-45%
<br>
<div style="background-color: #fa8072; height: 20px; width: 30px; display: inline-block;"></div> 46-50%
<br>
<div style="background-color: #ffffbf; height: 20px; width: 30px; display: inline-block;"></div> 51-60%
</div>',
position = "bottomright"
) %>%
addControl(
html = "<div style='background-color: white; padding: 5px; border-radius: 3px;'><h3>Civil Membership & Income in Maryland</h3></div>",
position = "topright"
)
#saveWidget(leafMap, "../output/state_member_all_map_jan_28.html")
leafMap
pal <- colorNumeric(
palette = "inferno",
domain = md2$pct_anymembershp_zip
)
#https://leaflet-extras.github.io/leaflet-providers/preview/
leafMap <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addPolygons(data = md2,
color = ~pal(md2$pct_anymembershp_zip),
weight = 2.5,
smoothFactor = 0.2,
fillOpacity = 0.5,
label = paste("Pct membership in civic groups is:",(md2$pct_anymembershp_zip), "Income is",(md2$income_per_capita), "in", (md2$NAME.y), "zip code", (md2$zip))) %>%
addControl(
html = '<div id="legend" style="background-color: white; padding: 10px; border-radius: 5px; border: 1px solid #ccc; text-align: center;">
<p><strong>Pct Membership 2020</strong></p>
<div style="background-color: gray; height: 20px; width: 30px; display: inline-block;"></div> 0: NA
<br>
<div style="background-color: black; height: 20px; width: 30px; display: inline-block;"></div> 30-39%
<br>
<div style="background-color: #e75480; height: 20px; width: 30px; display: inline-block;"></div> 40-45%
<br>
<div style="background-color: #fa8072; height: 20px; width: 30px; display: inline-block;"></div> 46-50%
<br>
<div style="background-color: #ffffbf; height: 20px; width: 30px; display: inline-block;"></div> 51-60%
</div>',
position = "bottomright"
) %>%
addControl(
html = "<div style='background-color: white; padding: 5px; border-radius: 3px;'><h3>Civil Membership & Income in Maryland</h3></div>",
position = "topright"
)
#saveWidget(leafMap, "../output/state_member_all_map_jan_28.html")
leafMap
pal <- colorNumeric(
palette = "inferno",
domain = md2$pct_anymembershp_zip
)
#https://leaflet-extras.github.io/leaflet-providers/preview/
leafMap <- leaflet() %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
addPolygons(data = md2,
color = ~pal(md2$pct_anymembershp_zip),
weight = 2.5,
smoothFactor = 0.2,
fillOpacity = 0.5,
label = paste("Pct membership in civic groups is:",(md2$pct_anymembershp_zip), "Income is",(md2$income_per_capita), "in", (md2$NAME.y), "zip code", (md2$zip))) %>%
addControl(
html = '<div id="legend" style="background-color: white; padding: 10px; border-radius: 5px; border: 1px solid #ccc; text-align: center;">
<p><strong>Pct Membership 2020</strong></p>
<div style="background-color: gray; height: 20px; width: 30px; display: inline-block;"></div> 0: NA
<br>
<div style="background-color: black; height: 20px; width: 30px; display: inline-block;"></div> 30-39%
<br>
<div style="background-color: #e75480; height: 20px; width: 30px; display: inline-block;"></div> 40-45%
<br>
<div style="background-color: #fa8072; height: 20px; width: 30px; display: inline-block;"></div> 46-50%
<br>
<div style="background-color: #ffffbf; height: 20px; width: 30px; display: inline-block;"></div> 51-60%
</div>',
position = "bottomright"
) %>%
addControl(
html = "<div style='background-color: white; padding: 5px; border-radius: 3px;'><h3>Civil Membership & Income in Maryland</h3></div>",
position = "topright"
)
saveWidget(leafMap, "../output/state_member_all_map_jan_28.html")
leafMap
#remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
#a = get_decennial(geography = "state", variables = "P1_001N", year = 2020)
# head(a, 5)
#install.packages("formattable")
library(formattable)
library(htmlwidgets)
library(leaflet)
library(sf)
library(formattable)
library(dplyr)
library(tidyr)
library(janitor)
#install.packages("leaflet.extras")
library(leaflet.extras)
library(googlesheets4)
census_api_key("9cabe8a191a1f824755d4a1845f13cb08faa2c5f", install = TRUE, overwrite = TRUE)
googlesheets4::gs4_deauth()
smith <- read_sheet("https://docs.google.com/spreadsheets/d/1RheKDdtsToCcSLnZoZBYwtN_ISw6E2kgPIQpDQE_BYw/edit?usp=sharing") %>%
as.data.frame()
smith <- smith %>%
clean_names()
#join Community Statistical Area names
#associates neighborhood names to Census Tracts using Community Statistical Areas, 2010 https://bniajfi.org/mapping-resources/
#Baltimore has 56 neighborhoods as measured by Community Statistical Areas
csa <- read_csv("../data/balt_census_crosswalks_2020.csv") %>%
rename(
geoid = GEOID_Tract_2020
) %>%
clean_names()
#smith$tract <- as.character(smith$tract)
smith1 <- smith  %>%
right_join(csa, by=c("tract"="geoid")) %>%
distinct()
#Rename Columns
smith1<- smith1 %>%
rename(neighborhood = community_statistical_area_2020,
census = tract_2020)
#write.csv(smith1, "smith1_balt.csv")
View(smith1)
names(smith1)
md_income2022_geo <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001"),
state = "MD",
year = 2022, geometry = TRUE) %>%
mutate(year=("2022")) %>%
rename(hh_med_inc_2022 = estimate) %>%
filter(variable=="median_income")
member_all <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip))
View(smith)
csa <- read_csv("../data/balt_census_crosswalks_2020.csv") %>%
rename(
geoid = GEOID_Tract_2020
) %>%
clean_names()
#smith$tract <- as.character(smith$tract)
smith1 <- smith  %>%
right_join(csa, by=c("tract"="geoid")) %>%
distinct()
#Rename Columns
smith1<- smith1 %>%
rename(neighborhood = community_statistical_area_2020,
census = tract_2020)
member_all <- smith1 %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip))
member_all$income_per_capita <- formattable::currency(member_all$income_per_capita, digits =0L)
member_all <- member_all %>%
mutate(GEOID = as.character(tract))
#join geocoordinates with baltcity
member_all2 <- md_income2022_geo  %>%
right_join(member_all, by=c("GEOID")) %>%
distinct()
View(member_all2)
md_income2022_geo <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001", income_per_capita = "B19301_001"),
state = "MD",
year = 2022, geometry = TRUE) %>%
mutate(year=("2022"))
View(md_income2022_geo)
smith_updated_2022 <- md_income2022_geo %>%
select(!(moe)) %>%
pivot_wider(names_from = year, values_from = estimate)
smith_updated_2022 <- md_income2022_geo %>%
pivot_wider(names_from = year, values_from = estimate)
smith_updated_2022 <- md_income2022_geo %>%
pivot_wider(names_from = year, values_from = estimate, values_fill = NA)
names(md_income2022_geo)
library(tidyverse)
smith_updated_2022 <- md_income2022_geo %>%
pivot_wider(names_from = year, values_from = estimate)
md_income2022_geo <- get_acs(geography = "tract",
variables = c(number_households = "B19001_001", median_income = "B19013_001", income_per_capita = "B19301_001"),
state = "MD",
year = 2022, geometry = TRUE) %>%
mutate(year=("2022")) %>%
as.data.frame()
smith_updated_2022 <- md_income2022_geo %>%
pivot_wider(names_from = year, values_from = estimate)
View(smith_updated_2022)
smith_updated_2022 <- md_income2022_geo %>%
select(!(moe)) %>%
pivot_wider(names_from = NAMES, values_from = estimate)
smith_updated_2022 <- md_income2022_geo %>%
#select(!(moe)) %>%
pivot_wider(names_from = NAMES, values_from = estimate)
names(md_income2022_geo)
smith_updated_2022 <- md_income2022_geo %>%
select(!(moe)) %>%
pivot_wider(names_from = NAME, values_from = estimate)
smith_updated_2022 <- md_income2022_geo %>%
select(!(moe)) %>%
pivot_wider(names_from = variable, values_from = estimate)
csa <- read_csv("../data/balt_census_crosswalks_2020.csv") %>%
rename(
geoid = GEOID_Tract_2020
) %>%
clean_names()
#smith$tract <- as.character(smith$tract)
smith_updated <- smith_updated  %>%
right_join(csa, by=c("tract"="geoid")) %>%
distinct()
csa <- read_csv("../data/balt_census_crosswalks_2020.csv") %>%
rename(
geoid = GEOID_Tract_2020
) %>%
clean_names()
#smith$tract <- as.character(smith$tract)
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("tract"="geoid")) %>%
distinct()
View(csa)
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("geoid")) %>%
distinct()
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("GEOID"="geoid")) %>%
distinct()
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("GEOID"=="geoid")) %>%
distinct()
glimpse(smith_updated_2022)
glimpse(csa)
smith_updated_2022$GEOID <- as.numeric(smith_updated_2022$GEOID)
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("GEOID"=="geoid")) %>%
distinct()
smith_updated_2022 <- smith_updated_2022  %>%
right_join(csa, by=c("GEOID"="geoid")) %>%
distinct()
View(smith_updated_2022)
library(tidyverse)
foot <- rio::import("../data/baltimore_foot_traffic.dta")
#write.csv(foot, "baltimore_foot_traffic.csv")
names(foot)
foot_sum <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", "))
View(foot_sum)
foot_sum <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
distinct(fulladdress, .keep_all = TRUE)
library(tidyr)
library(ggmap)
register_google(key = "AIzaSyDa9e_boRiEo-nfqfJ5xLZBx47KbwFV8SE")
foot_sum <- foot_sum %>%
mutate(geo = geocode(fulladdress))
dplyr::last_dplyr_warnings()
dplyr::last_dplyr_warnings(n = 10)
View(foot_sum)
write.csv(foot_sum, "foot_traffic_geocode_lookup.csv")
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum, by=c("fulladdress"))
View(foot1)
names(foot_sum)
foot_sum_short <- foot_sum |>
select(location_name, street_address, geo)
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum_short, by=c("fulladdress", "location_name"))
foot_sum_short <- foot_sum |>
select(location_name, fulladdress, geo)
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum_short, by=c("fulladdress", "location_name"))
View(foot1)
foot1 |>
count(geo)
foot_sum |>
group_by(fulladdress)
count(geo)
View(foot_sum)
foot_sum |>
group_by(fulladdress)
count(geo$lon)
foot_sum |>
group_by(fulladdress) |>
count(geo)
foot1 |>
group_by(fulladdress) |>
count(geo)
foot1 |>
group_by(fulladdress) |>
count(geo) |>
sumamrize(sum(n))
foot1 |>
group_by(fulladdress) |>
count(geo) |>
sumamrise(sum(n))
foot1 |>
group_by(fulladdress) |>
count(geo) |>
sum(n)
foot1 |>
group_by(fulladdress) |>
count(geo) |>
summarize(sum(n))
foot1 |>
group_by(geo) |>
count(geo) |>
summarize(sum(n))
foot1 |>
count(geo) |>
summarize(sum(n))
foot1 |>
count(geo)
View(foot1)
head(foot1)
foot_sum <- foot_sum %>%
unnest(geo)
View(foot_sum)
write.csv(foot_sum, "foot_traffic_geocode_lookup.csv")
names(foot_sum)
foot_sum_short <- foot_sum |>
select(location_name, fulladdress, lon, lat)
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum_short, by=c("fulladdress", "location_name"))
foot1 |>
count(lon) |>
summarize(sum(n))
head(foot1)
sum(is.na(foot1$lat))
27888/143297
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
right_join(foot_sum_short, by=c("fulladdress", "location_name"))
sum(is.na(foot1$lat))
View(foot1)
143297-27888
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum_short, by=c("fulladdress", "location_name"))
foot_sum |>
group_by(city) |>
count(is.na(lat))
foot_sum |>
group_by(city) |>
count(is.na(lat)) |>
arrange(desc(n))
foot_sum |>
group_by(city) |>
count(is.na(lat)) |>
filter(`is.na(lat)` == TRUE) |>
arrange(desc(n))
foot_sum |>
group_by(city) |>
count(is.na(lat)) |>
filter(is.na(lat) == TRUE) |>
arrange(desc(n))
names(foot_sum)
foot_sum |>
group_by(city) |>
count(is.na(lat)) |>
filter(is.na(lat) == TRUE) |>
arrange(desc(n))
foot_sum |>
group_by(city) |>
count(.data$lat) |>
filter(is.na(.data$lat)) |>
arrange(desc(n))
foot_sum_short <- foot_sum |>
select(fulladdress, lon, lat)
foot1 <- foot |>
mutate(fulladdress = paste(street_address, city, region, postal_code, sep = ", ")) |>
left_join(foot_sum_short, by=c("fulladdress"))
sum(is.na(foot1$lat))
View(foot1)
foot1 |>
group_by(city) |>
count(is.na(lat)) |>
arrange(desc(n))
foot1 |>
group_by(city) |>
count(is.na(lat)) |>
arrange(desc(n))
x <- foot1 |>
group_by(city) |>
count(is.na(lat)) |>
arrange(desc(n)) |>
rename(valid = is.na(lat))
x <- foot1 |>
group_by(city) |>
count(is.na(lat)) |>
arrange(desc(n)) |>
rename(valid = 'is.na(lat)')
View(x)
foot1 |>
group_by(city) |>
count()
foot1 |>
group_by(city) |>
count() |>
arrange(desc(n))
bol <- read.csv("../data/baltimore_bol.csv")
View(bol)
names(bol)
bol <- read.csv("../data/baltimore_bol.csv") |>
janitor::clean_names()
names(bol)
bol <- read.csv("../data/baltimore_bol.csv") |>
janitor::clean_names() |>
select(company_name,       address_1,          address_2,
city,               state,              zip,                zip4,
latitude,           longitude,          phone,              fax,
website,            email,              employees,          revenue,
contact_formal_name,first_name,
middle,             last_name,          suffix,             title,
last_published_date, classification, ranking_criteria, list_title, company_id, business_info)
library(sf)
library(leaflet)
foot_traffic_biz <- foot1 |>
st_join(bol, left = "FALSE")
foot1_sf <- foot1 |>
st_as_sf(coords = c("lon", "lat"),
crs = 4326)
foot_traffic_biz <- foot1_sf |>
st_join(bol, left = "FALSE")
foot_traffic_biz <- foot1 |>
inner_join(bol, by = c("lat" = "lat", "lon" = "lon"))
names(foot1)
names(bol)
foot_traffic_biz <- foot1 |>
inner_join(bol, by = c("lat" = "latitude", "lon" = "longitude"))
View(foot_traffic_biz)
View(bol)
