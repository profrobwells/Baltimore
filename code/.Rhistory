inner_join(md_zip, by=c("zip"))
glimpse(md_zip)
glimpse(anti_md_named)
md_zip <- md_zip %>%
mutate(zip = as.numeric(ZIPCODE1))
anti_md_zips <- anti_md_named %>%
inner_join(md_zip, by=c("zip"))
View(anti_md_zips)
names(md_named)
names(anti_md_zips)
View(anti_md_named)
View(md)
1388-1267
View(md)
#MD counties
md_counties <- rio::import("/Users/robwells/Downloads/md_counties_geoids.txt")
View(md_counties)
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = strtrim(tract, 5))
md_named <- md %>%
inner_join(md_counties, by=c("tract"="GEOID"))
glimpse(md)
md_named <- md %>%
inner_join(md_counties, by=c("county"="GEOID"))
md <- rio::import("../data/maryland_tracts.xls") %>%
as.data.frame()
md <- md %>%
clean_names() %>%
mutate(census = as.character(tract)) %>%
mutate(county = as.numeric(strtrim(tract, 5)))
md_named <- md %>%
inner_join(md_counties, by=c("county"="GEOID"))
md_tract <- get_acs(
geography = "tract",
state = "Maryland",
variables = c(medinc = "B19013_001"),
year = 2022,
output = "wide"
)
View(md_tract)
View(cross)
write.csv(md_named, "../output/md_smith_data_12.16.csv")
View(md)
#remotes::install_github("walkerke/tidycensus")
library(tidyverse)
library(tidycensus)
#a = get_decennial(geography = "state", variables = "P1_001N", year = 2020)
# head(a, 5)
#install.packages("formattable")
library(formattable)
library(htmlwidgets)
library(leaflet)
library(sf)
library(formattable)
library(dplyr)
library(tidyr)
library(janitor)
#install.packages("leaflet.extras")
library(leaflet.extras)
library(googlesheets4)
census_api_key("9cabe8a191a1f824755d4a1845f13cb08faa2c5f", install = TRUE, overwrite = TRUE)
smith <- read.csv("../data/smith1_balt.csv")
#199 census tracts
#25 zip codes (totalling 199 areas, but need to check boundaries)
x<- smith %>%
group_by(zip) %>%
count ()
sum(x$n)
#per capita income seems way too low
median(smith$income_per_capita, na.rm = TRUE) #22789.76
median(smith$pct_anymembershp_zip, na.rm = TRUE) #0.455563
summary(smith$pct_anymembershp_zip, na.rm = TRUE)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#  0.3353  0.4444  0.4556  0.4613  0.4752  0.5241       3
median(smith$nbanks_zip, na.rm = TRUE) #5
summary(smith$nbanks_zip, na.rm = TRUE)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 0.000   2.000   5.000   5.847   8.000  14.000       3
median(smith$census_response_rate2020, na.rm = TRUE) #0.564
summary(smith$census_response_rate2020, na.rm = TRUE)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#  0.2830  0.4753  0.5640  0.5594  0.6522  0.8360       3
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76)
View(himember)
library(kableExtra)
himember %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, width = "5em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, width = "5em")
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(membership = formattable::percent(membership))
View(himember)
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip))
View(himember)
names(himember)
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%   mutate(income_per_capita = scales::dollar_format(income_per_capita ))
glimpse(himember)
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%   mutate(income_per_capita = scales::dollar_format(income_per_capita, 0))
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%   mutate(income_per_capita = formattable::currency(income_per_capita, digitals =0L))
names(himember)
View(himember)
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%   mutate(income_per_capita1 = formattable::currency(income_per_capita, digitals =0L))
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%   mutate(income_per_capita1 = formattable::currency(income_per_capita, digits =0L))
himember <- smith %>%
group_by(neighborhood) %>%
select(pct_anymembershp_zip, income_per_capita, tract) %>%
arrange(desc(pct_anymembershp_zip)) %>%
filter(pct_anymembershp_zip >= 0.455563) %>%
filter(income_per_capita <= 22789.76) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%
mutate(income_per_capita1 = formattable::currency(income_per_capita, digits =0L))
himember$income_per_capita <- formattable::currency(himember$income_per_capita, digits =0L)
View(himember)
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, width = "5em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow", border_left = T) %>%
column_spec(3, width = "5em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, border_left = T, width = "5em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, border_right = T, width = "5em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "5em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 30) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
himember %>%
rename(Neighborhood = neighborhood, Membership = pct_anymembershp_zip, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities With Greater than Median Membership - 46%- but Less than Median Income - $22,790", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em") %>%
save_kable(file = "../DataOutput/himember.html", self_contained = T)
smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, nbanks_zip) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(income_per_capita <= 22653.77)
hicensus <- smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, nbanks_zip) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(income_per_capita <= 22653.77) %>%
mutate(census_response_rate2020 = formattable::percent(census_response_rate2020))
hicensus$income_per_capita <- formattable::currency(hicensus$income_per_capita, digits =0L)
View(hicensus)
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
hicensus <- smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, tract) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(income_per_capita <= 22653.77) %>%
mutate(census_response_rate2020 = formattable::percent(census_response_rate2020))
hicensus$income_per_capita <- formattable::currency(hicensus$income_per_capita, digits =0L)
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em")
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em") %>%
column_spec(4, border_right = T, width = "10em")
hicensus <- smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, tract) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(income_per_capita <= 22653.77) %>%
mutate(census_response_rate2020 = formattable::percent(census_response_rate2020)) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip)) %>%
hicensus$income_per_capita <- formattable::currency(hicensus$income_per_capita, digits =0L)
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em") %>%
column_spec(4, border_right = T, width = "10em")
hicensus <- smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, tract) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(income_per_capita <= 22653.77) %>%
mutate(census_response_rate2020 = formattable::percent(census_response_rate2020)) %>%
mutate(pct_anymembershp_zip = formattable::percent(pct_anymembershp_zip))
hicensus$income_per_capita <- formattable::currency(hicensus$income_per_capita, digits =0L)
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em") %>%
column_spec(4, border_right = T, width = "10em")
hicensus %>%
rename(Neighborhood = neighborhood, Census_Response = census_response_rate2020, Per_Capita_Income = income_per_capita, Census_Tract = tract, Membership = pct_anymembershp_zip) %>%
kbl(caption = "Communities in the Upper Quartile of Census Response - 65%- but Less than Median Income - $22,654", font_size = 50, bold=T) %>%
kable_classic(full_width = T, html_font = "Cambria") %>%
column_spec(1, bold = T, border_right = T) %>%
column_spec(2, border_right = T, width = "10em", background = "yellow") %>%
column_spec(3, border_right = T, width = "10em") %>%
column_spec(4, border_right = T, width = "10em") %>%
save_kable(file = "../DataOutput/hicensus.html", self_contained = T)
#communities in the upper quartile of census response - 65%- and upper quartile of membership - 46%
smith %>%
group_by(neighborhood) %>%
select(census_response_rate2020, income_per_capita, pct_anymembershp_zip, nbanks_zip) %>%
arrange(desc(census_response_rate2020)) %>%
filter(census_response_rate2020 >= 0.6522) %>%
filter(pct_anymembershp_zip >= 0.4613) %>%
arrange((income_per_capita))
sba <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-1.txt")
lines <- readLines(con = "/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-1.txt", encoding = "UTF-16")
writeLines(lines, con = "/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-2.txt", useBytes = TRUE)
sba <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-2.txt")
sba <- rio::import(lines)
sba <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-2.txt")
sba <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/sba7a_sample-1.csv")
View(sba)
sba2 <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/foia-504-fy2010-present-asof-230930.csv")
View(sba2)
names(sba2)
sba_baltimore <- sba2 %>%
filter(BorrCity=="Baltimore")
View(sba_baltimore)
statistics(sba_baltimore$GrossApproval)
summary(sba_baltimore$GrossApproval)
sba3 <- rio::import("/Users/robwells/Library/CloudStorage/GoogleDrive-robwells@umd.edu/My Drive/Baltimore Jour 327 Spring 2024/foia-7afy2020-present-asof-230930.csv")
sba_baltimore2 <- sba3 %>%
filter(BorrCity=="Baltimore")
summary(sba_baltimore2$GrossApproval)
View(sba3)
View(sba_baltimore2)
sba_baltimore2 <- sba3 %>%
filter(BorrCity=="Baltimore") %>%
filter(BorrState=="MD")
csa <- read_csv("../data/balt_census_crosswalks_2020.csv") %>%
rename(
geoid = GEOID_Tract_2020
) %>%
clean_names()
View(csa)
#zip to neighborhood file
zip <- rio::import("/data/Zip-to-CSA-2010.xls")
#zip to neighborhood file
zip <- rio::import("../data/Zip-to-CSA-2010.xls")
View(zip)
sba_baltimore2 <- sba_baltimore2 %>%
inner_join(zip, by=c("BorrZip"="Zip2010"))
sba_baltimore2 <- sba3 %>%
filter(BorrCity=="Baltimore") %>%
filter(BorrState=="MD")
sba_baltimore3 <- sba_baltimore2 %>%
right_join(zip, by=c("BorrZip"="Zip2010"))
sba_baltimore3 <- sba_baltimore2 %>%
left_join(zip, by=c("BorrZip"="Zip2010"))
sba_baltimore3 <- sba_baltimore2 %>%
right_join(zip, by=c("BorrZip"="Zip2010"))
View(sba_baltimore2)
zip %>%
count(Zip2010)
zip %>%
count(Zip2010) %>%
arrange(desc(n))
sba_baltimore_504 <- sba2 %>%
filter(BorrCity=="Baltimore")
View(sba_baltimore_504)
sba_baltimore_504 <- sba2 %>%
filter(BorrCity=="Baltimore") %>%
filter(BorrState=="MD")
summary(sba_baltimore$GrossApproval)
summary(sba_baltimore_504$GrossApproval)
sba_baltimore_7a <- sba3 %>%
filter(BorrCity=="Baltimore") %>%
filter(BorrState=="MD")
library(tidyr)
#install.packages("ggmap")
library(ggmap)
register_google(key = "AIzaSyDa9e_boRiEo-nfqfJ5xLZBx47KbwFV8SE")
View(sba_baltimore_7a)
lynch_geocoded_10.8 <- read.csv("../data/lynch_geocoded_10.8.csv") %>%
mutate(date = str_trim(date))
View(lynch_geocoded_10.8)
names(sba_baltimore_7a)
sba_baltimore_7a <- sba_baltimore_7a %>%
mutate(fulladdress = paste(BorrStreet, BorrCity, BorrState, BorrZip, sep = ","))
View(sba_baltimore_7a)
sba_baltimore_7a <- sba_baltimore_7a %>%
mutate(fulladdress = paste(BorrStreet, BorrCity, BorrState, BorrZip, sep = ", "))
sba_baltimore_7a <- sba_baltimore_7a %>%
mutate(geo = geocode(fulladdress))
View(sba_baltimore_7a)
register_google(key = "AIzaSyDa9e_boRiEo-nfqfJ5xLZBx47KbwFV8SE")
sba_baltimore_7a <- sba_baltimore_7a %>%
mutate(fulladdress = paste(BorrStreet, BorrCity, BorrState, BorrZip, sep = ", "))
sba_baltimore_7a <- sba_baltimore_7a %>%
mutate(geo = geocode(fulladdress))
dplyr::last_dplyr_warnings()
# Load the necessary library
library(httr)
# Load the necessary library
library(httr)
# Define a function to get the census block for a given lat and long
get_census_block <- function(lat, long) {
# Define the base URL for the API
base_url <- "https://geo.fcc.gov/api/census/block/find"
# Make the GET request
response <- GET(url = base_url, query = list(latitude = lat, longitude = long, format = "json"))
# Parse the response content to JSON
content <- content(response, "parsed")
# Return the FIPS code for the census block
return(content$Block$FIPS)
}
# Use the function to get the census block for a given lat and long
census_block <- get_census_block(lat = 39.34476, long = -76.51560)
# Print the census block
print(census_block)
glimpse(sba_baltimore_7a)
sba_baltimore_7a <- sba_baltimore_7a %>%
unnest(geo)
glimpse(sba_baltimore_7a)
sba_baltimore_7a <- sba_baltimore_7a %>%
as.data.frame()
# Load the necessary library
library(httr)
# Define a function to get the census block for a given lat and long
get_census_block <- function(lat, long) {
# Define the base URL for the API
base_url <- "https://geo.fcc.gov/api/census/block/find"
# Make the GET request
response <- GET(url = base_url, query = list(latitude = lat, longitude = long, format = "json"))
# Parse the response content to JSON
content <- content(response, "parsed")
# Return the FIPS code for the census block
return(content$Block$FIPS)
}
# Apply the function to each row in df1
df1$census_block <- mapply(get_census_block, df1$lat, df1$long)
# Load the necessary library
library(httr)
# Define a function to get the census block for a given lat and long
get_census_block <- function(lat, long) {
# Define the base URL for the API
base_url <- "https://geo.fcc.gov/api/census/block/find"
# Make the GET request
response <- GET(url = base_url, query = list(latitude = lat, longitude = long, format = "json"))
# Parse the response content to JSON
content <- content(response, "parsed")
# Return the FIPS code for the census block
return(content$Block$FIPS)
}
# Apply the function to each row in df1
# df1$census_block <- mapply(get_census_block, df1$lat, df1$long)
sba_baltimore_7a$census_block <- mapply(get_census_block, sba_baltimore_7a$lat, sba_baltimore_7a$lon)
#
# # Use the function to get the census block for a given lat and long
# census_block <- get_census_block(lat = 39.34476, long = -76.51560)
#
# # Print the census block
# print(census_block)
write.csv(sba_baltimore_7a, "../data/sba_baltimore_7a.csv")
write_csv(sba_baltimore_7a, "../data/sba_baltimore_7a.csv")
